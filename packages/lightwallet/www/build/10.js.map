{"version":3,"sources":["../../src/app/vaults/spend/confirm/vault-spend-confirm.module.ts","../../src/app/shared/shared.module.ts","../../src/app/shared/to-unit.pipe.ts","../../src/app/shared/to-fiat.pipe.ts","../../node_modules/@ionic-native/social-sharing/index.js","../../src/app/transact/send/easy-send/easy-send.service.ts","../../src/app/shared/notification.service.ts","../../src/app/shared/fee/fee-level-modal.ts","../../src/app/vaults/spend/vault-spend.service.ts","../../src/app/vaults/spend/confirm/vault-spend-confirm.ts"],"names":[],"mappings":"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AS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR,iC;;;;;;;;;;;;;;;;;;;;;;AC3ToC;AACO;AACkB;AAK7D,IAAa,eAAe,GAA5B;IACE,YACU,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IACnC,CAAC;IACG,wBAAwB,CAAC,MAAyB;QAEvD,uCAAuC;QACvC,IAAI,IAAI,GAAG;YACT,OAAO,EAAE,MAAM,CAAC,OAAO;YACvB,UAAU,EAAE,MAAM,CAAC,SAAS;YAC5B,UAAU,EAAE,EAAE;SACf,CAAC;QAEF,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;YACxD,IAAI,gBAAgB,GAAG;gBACrB,UAAU,EAAE,MAAM,CAAC,SAAS;gBAC5B,OAAO,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE;gBAC/C,OAAO,EAAE,IAAI,CAAC,OAAO;aACtB,CAAC;YACF,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBACtD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","file":"10.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SharedModule } from 'merit/shared/shared.module';\n\nimport { VaultSpendConfirmView } from './vault-spend-confirm';\n\nimport { ProfileService } from 'merit/core/profile.service';\nimport { WalletService } from 'merit/wallets/wallet.service';\nimport { WalletsModule } from \"merit/wallets/wallets.module\";\nimport { NotificationService } from 'merit/shared/notification.service';\nimport { FeeLevelModal } from 'merit/shared/fee/fee-level-modal';\nimport { FeeService } from 'merit/shared/fee/fee.service';\nimport { EasySendService } from 'merit/transact/send/easy-send/easy-send.service';\nimport { SocialSharing } from '@ionic-native/social-sharing';\nimport { SpendVaultService } from 'merit/vaults/spend/vault-spend.service';\n\n/*\n  ToDo: Work to get this lazy-loadable as possible. \n*/\n@NgModule({\n  declarations: [\n    VaultSpendConfirmView,\n  ],\n  imports: [\n    IonicPageModule.forChild(VaultSpendConfirmView),\n    SharedModule,\n  ],\n  providers: [\n    WalletService,\n    NotificationService,\n    EasySendService,\n    SocialSharing,\n    FeeService,\n    FeeLevelModal,\n    SpendVaultService,\n  ]\n})\nexport class VaultSpendConfirmModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/vaults/spend/confirm/vault-spend-confirm.module.ts","import { NgModule } from '@angular/core';\nimport { GravatarComponent } from 'merit/shared/gravatar.component';\nimport { ToUnitPipe } from 'merit/shared/to-unit.pipe';\nimport { ToFiatPipe } from 'merit/shared/to-fiat.pipe';\nimport { TranslateModule } from '@ngx-translate/core';\n\n// This module manaages the sending of money.\n@NgModule({\n  declarations: [\n    ToUnitPipe,\n    ToFiatPipe\n  ],\n  imports: [\n  ],\n  exports: [\n    ToUnitPipe,\n    ToFiatPipe,\n    TranslateModule\n  ]\n})\nexport class SharedModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/shared.module.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport { ConfigService } from 'merit/shared/config.service';\nimport { TxFormatService } from 'merit/transact/tx-format.service';\n\n@Pipe({ name: 'toUnit' })\nexport class ToUnitPipe implements PipeTransform {\n  private unitCode: string;\n  \n  constructor(\n    private configProvider: ConfigService,\n    private txFormatProvider: TxFormatService\n  ) {\n    this.unitCode = this.configProvider.get().wallet.settings.unitCode;\n  }\n  transform(value: string, satoshis: number): any {\n    return this.txFormatProvider.formatAmountStr(satoshis);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/to-unit.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport { ConfigService } from 'merit/shared/config.service';\nimport { TxFormatService } from 'merit/transact/tx-format.service';\nimport * as Promise from 'bluebird';\n\n@Pipe({ name: 'toFiat' })\nexport class ToFiatPipe implements PipeTransform {\n  private unitCode: string;\n\n  constructor(\n    private configProvider: ConfigService,\n    private txFormatProvider: TxFormatService\n  ) { \n    this.unitCode = this.configProvider.get().wallet.settings.unitCode;\n  }\n  transform(value: string, satoshis: number): Promise<string> {\n    return this.txFormatProvider.formatAlternativeStr(satoshis).then((altSr:string) => {\n      return Promise.resolve(altSr);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/to-fiat.pipe.ts","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Injectable } from '@angular/core';\r\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\r\n/**\r\n * @name Social Sharing\r\n * @description\r\n * Share text, files, images, and links via social networks, sms, and email.\r\n *\r\n * For Browser usage check out the Web Share API docs: https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin#web-share-api\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { SocialSharing } from '@ionic-native/social-sharing';\r\n *\r\n * constructor(private socialSharing: SocialSharing) { }\r\n *\r\n * ...\r\n *\r\n * // Check if sharing via email is supported\r\n * this.socialSharing.canShareViaEmail().then(() => {\r\n *   // Sharing via email is possible\r\n * }).catch(() => {\r\n *   // Sharing via email is not possible\r\n * });\r\n *\r\n * // Share via email\r\n * this.socialSharing.shareViaEmail('Body', 'Subject', ['recipient@example.org']).then(() => {\r\n *   // Success!\r\n * }).catch(() => {\r\n *   // Error!\r\n * });\r\n * ```\r\n */\r\nvar SocialSharing = (function (_super) {\r\n    __extends(SocialSharing, _super);\r\n    function SocialSharing() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares using the share sheet\r\n     * @param message {string} The message you would like to share.\r\n     * @param subject {string} The subject\r\n     * @param file {string|string[]} URL(s) to file(s) or image(s), local path(s) to file(s) or image(s), or base64 data of an image. Only the first file/image will be used on Windows Phone.\r\n     * @param url {string} A URL to share\r\n     * @returns {Promise<any>}\r\n     */\r\n    SocialSharing.prototype.share = function (message, subject, file, url) { return; };\r\n    /**\r\n     * Shares using the share sheet with additional options and returns a result object or an error message (requires plugin version 5.1.0+)\r\n     * @param options {object} The options object with the message, subject, files, url and chooserTitle properties.\r\n     * @returns {Promise<any>}\r\n     */\r\n    SocialSharing.prototype.shareWithOptions = function (options) { return; };\r\n    /**\r\n     * Checks if you can share via a specific app.\r\n     * @param appName {string} App name or package name. Examples: instagram or com.apple.social.facebook\r\n     * @param message {string}\r\n     * @param subject {string}\r\n     * @param image {string}\r\n     * @param url {string}\r\n     * @returns {Promise<any>}\r\n     */\r\n    SocialSharing.prototype.canShareVia = function (appName, message, subject, image, url) { return; };\r\n    /**\r\n     * Shares directly to Twitter\r\n     * @param message {string}\r\n     * @param image {string}\r\n     * @param url {string}\r\n     * @returns {Promise<any>}\r\n     */\r\n    SocialSharing.prototype.shareViaTwitter = function (message, image, url) { return; };\r\n    /**\r\n     * Shares directly to Facebook\r\n     * @param message {string}\r\n     * @param image {string}\r\n     * @param url {string}\r\n     * @returns {Promise<any>}\r\n     */\r\n    SocialSharing.prototype.shareViaFacebook = function (message, image, url) { return; };\r\n    /**\r\n     * Shares directly to Facebook with a paste message hint\r\n     * @param message {string}\r\n     * @param image {string}\r\n     * @param url {string}\r\n     * @param pasteMessageHint {string}\r\n     * @returns {Promise<any>}\r\n     */\r\n    SocialSharing.prototype.shareViaFacebookWithPasteMessageHint = function (message, image, url, pasteMessageHint) { return; };\r\n    /**\r\n     * Shares directly to Instagram\r\n     * @param message {string}\r\n     * @param image {string}\r\n     * @returns {Promise<any>}\r\n     */\r\n    SocialSharing.prototype.shareViaInstagram = function (message, image) { return; };\r\n    /**\r\n     * Shares directly to WhatsApp\r\n     * @param message {string}\r\n     * @param image {string}\r\n     * @param url {string}\r\n     * @returns {Promise<any>}\r\n     */\r\n    SocialSharing.prototype.shareViaWhatsApp = function (message, image, url) { return; };\r\n    /**\r\n     * Shares directly to a WhatsApp Contact\r\n     * @param receiver {string} Pass phone number on Android, and Addressbook ID (abid) on iOS\r\n     * @param message {string} Message to send\r\n     * @param image {string} Image to send (does not work on iOS\r\n     * @param url {string} Link to send\r\n     * @returns {Promise<any>}\r\n     */\r\n    SocialSharing.prototype.shareViaWhatsAppToReceiver = function (receiver, message, image, url) { return; };\r\n    /**\r\n     * Share via SMS\r\n     * @param messge {string} message to send\r\n     * @param phoneNumber {string} Number or multiple numbers seperated by commas\r\n     * @returns {Promise<any>}\r\n     */\r\n    SocialSharing.prototype.shareViaSMS = function (messge, phoneNumber) { return; };\r\n    /**\r\n     * Checks if you can share via email\r\n     * @returns {Promise<any>}\r\n     */\r\n    SocialSharing.prototype.canShareViaEmail = function () { return; };\r\n    /**\r\n     * Share via Email\r\n     * @param message {string}\r\n     * @param subject {string}\r\n     * @param to {string[]}\r\n     * @param cc {string[]} Optional\r\n     * @param bcc {string[]} Optional\r\n     * @param files {string|string[]} Optional URL or local path to file(s) to attach\r\n     * @returns {Promise<any>}\r\n     */\r\n    SocialSharing.prototype.shareViaEmail = function (message, subject, to, cc, bcc, files) { return; };\r\n    /**\r\n     * Share via AppName\r\n     * @param appName {string} App name or package name. Examples: instagram or com.apple.social.facebook\r\n     * @param message {string}\r\n     * @param subject {string}\r\n     * @param image {string}\r\n     * @param url {string}\r\n     * @returns {Promise<any>}\r\n     */\r\n    SocialSharing.prototype.shareVia = function (appName, message, subject, image, url) { return; };\r\n    /**\r\n     * defines the popup position before call the share method.\r\n     * @param targetBounds {string} left, top, width, height\r\n     */\r\n    SocialSharing.prototype.setIPadPopupCoordinates = function (targetBounds) { };\r\n    SocialSharing.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    SocialSharing.ctorParameters = function () { return []; };\r\n    __decorate([\r\n        Cordova({\r\n            successIndex: 4,\r\n            errorIndex: 5\r\n        }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String, Object, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], SocialSharing.prototype, \"share\", null);\r\n    __decorate([\r\n        Cordova({\r\n            platforms: ['iOS', 'Android']\r\n        }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], SocialSharing.prototype, \"shareWithOptions\", null);\r\n    __decorate([\r\n        Cordova({\r\n            successIndex: 5,\r\n            errorIndex: 6,\r\n            platforms: ['iOS', 'Android']\r\n        }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String, String, String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], SocialSharing.prototype, \"canShareVia\", null);\r\n    __decorate([\r\n        Cordova({\r\n            successIndex: 3,\r\n            errorIndex: 4,\r\n            platforms: ['iOS', 'Android']\r\n        }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], SocialSharing.prototype, \"shareViaTwitter\", null);\r\n    __decorate([\r\n        Cordova({\r\n            successIndex: 3,\r\n            errorIndex: 4,\r\n            platforms: ['iOS', 'Android']\r\n        }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], SocialSharing.prototype, \"shareViaFacebook\", null);\r\n    __decorate([\r\n        Cordova({\r\n            successIndex: 4,\r\n            errorIndex: 5,\r\n            platforms: ['iOS', 'Android']\r\n        }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String, String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], SocialSharing.prototype, \"shareViaFacebookWithPasteMessageHint\", null);\r\n    __decorate([\r\n        Cordova({\r\n            platforms: ['iOS', 'Android']\r\n        }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], SocialSharing.prototype, \"shareViaInstagram\", null);\r\n    __decorate([\r\n        Cordova({\r\n            successIndex: 3,\r\n            errorIndex: 4,\r\n            platforms: ['iOS', 'Android']\r\n        }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], SocialSharing.prototype, \"shareViaWhatsApp\", null);\r\n    __decorate([\r\n        Cordova({\r\n            successIndex: 4,\r\n            errorIndex: 5,\r\n            platforms: ['iOS', 'Android']\r\n        }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String, String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], SocialSharing.prototype, \"shareViaWhatsAppToReceiver\", null);\r\n    __decorate([\r\n        Cordova({\r\n            platforms: ['iOS', 'Android']\r\n        }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], SocialSharing.prototype, \"shareViaSMS\", null);\r\n    __decorate([\r\n        Cordova({\r\n            platforms: ['iOS', 'Android']\r\n        }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", []),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], SocialSharing.prototype, \"canShareViaEmail\", null);\r\n    __decorate([\r\n        Cordova({\r\n            platforms: ['iOS', 'Android'],\r\n            successIndex: 6,\r\n            errorIndex: 7\r\n        }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String, Array, Array, Array, Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], SocialSharing.prototype, \"shareViaEmail\", null);\r\n    __decorate([\r\n        Cordova({\r\n            successIndex: 5,\r\n            errorIndex: 6,\r\n            platforms: ['iOS', 'Android']\r\n        }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String, String, String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], SocialSharing.prototype, \"shareVia\", null);\r\n    __decorate([\r\n        Cordova({\r\n            sync: true,\r\n            platforms: ['iOS']\r\n        }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], SocialSharing.prototype, \"setIPadPopupCoordinates\", null);\r\n    SocialSharing = __decorate([\r\n        Plugin({\r\n            pluginName: 'SocialSharing',\r\n            plugin: 'cordova-plugin-x-socialsharing',\r\n            pluginRef: 'plugins.socialsharing',\r\n            repo: 'https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin',\r\n            platforms: ['Android', 'Browser', 'iOS', 'Windows', 'Windows Phone']\r\n        })\r\n    ], SocialSharing);\r\n    return SocialSharing;\r\n}(IonicNativePlugin));\r\nexport { SocialSharing };\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/social-sharing/index.js\n// module id = 820\n// module chunks = 0 2 6 10 11","import * as Promise from 'bluebird';\nimport { Injectable } from '@angular/core';\nimport { SocialSharing } from '@ionic-native/social-sharing';\nimport { MeritWalletClient } from 'src/lib/merit-wallet-client';\nimport { EasySend } from 'merit/transact/send/easy-send/easy-send.model';\n\n@Injectable()\nexport class EasySendService {\n  constructor(\n    private socialSharing: SocialSharing\n  ) {}\n  public createEasySendScriptHash(wallet: MeritWalletClient): Promise<EasySend> {\n\n    // TODO: get a passphrase from the user\n    let opts = {\n      network: wallet.network,\n      unlockCode: wallet.shareCode,\n      passphrase: ''\n    };\n\n    return wallet.buildEasySendScript(opts).then((easySend) => {\n      let unlockScriptOpts = {\n        unlockCode: wallet.shareCode,\n        address: easySend.script.toAddress().toString(), // not typechecked yet\n        network: opts.network\n      };\n      return wallet.unlockAddress(unlockScriptOpts).then(() => {\n        let unlockRecipientOpts = {\n          unlockCode: wallet.shareCode,\n          address: easySend.receiverPubKey.toAddress().toString(), // not typechecked yet\n          network: opts.network\n        };\n        return wallet.unlockAddress(unlockRecipientOpts);\n      }).then(() => {\n        return Promise.resolve(easySend);\n      });\n    }).catch((err) => {\n      return Promise.reject(new Error('error building easysend script' + err));\n    });\n  }\n\n  public sendSMS(phoneNumber: string, amountMrt:string, url: string): Promise<any> {\n    let msg: string = `Here is ${amountMrt} Merit.  Click here to redeem: ${url}`\n    if (msg.length > 160) {\n      // TODO: Find a way to properly split the URL across two Messages, if needed.\n      const msg1: string = `I just sent you ${amountMrt} Merit.  Merit is a new Digital Currency.  `\n      const msg2: string = url;\n\n      // HACK: \n      msg = msg2;\n    }\n    return Promise.resolve(this.socialSharing.shareViaSMS(msg, phoneNumber)).catch((err) => {\n      return Promise.reject(new Error('error sending sms: ' + err));\n    });\n  }\n\n  public sendEmail(emailAddress: string, amountMrt:string, url: string): Promise<any> {\n    return Promise.resolve(this.socialSharing.canShareViaEmail()).then(() => {\n      const message:string = `I just sent you ${amountMrt} Merit!  Merit is a new digital currency, and if you don't have a Merit Wallet yet, you can easily make one to claim the money. \\n \\n Here is the link to claim the Merit: \\n \\n ${url}`\n      return this.socialSharing.shareViaEmail(message, `Here is ${amountMrt} Merit!`, [emailAddress]);\n    }).catch((err) => {\n      return Promise.reject(new Error('error sending email: ' + err));\n    })\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/transact/send/easy-send/easy-send.service.ts","import { Injectable } from '@angular/core';\nimport * as Promise from 'bluebird';\nimport { Logger } from 'merit/core/logger';\nimport { BwcService } from 'merit/core/bwc.service';\nimport { ConfigService } from 'merit/shared/config.service';\nimport { ProfileService } from 'merit/core/profile.service';\nimport { PersistenceService } from 'merit/core/persistence.service';\nimport { TransactionProposal } from 'merit/transact/transaction-proposal.model';\nimport { Referral } from 'merit/community/referral.model';\n\nimport * as _ from 'lodash';\n\ntype Subject = TransactionProposal | Referral\n/**\n * This service allows you to subscribe and unsubscribe \n * from notifications on an object.\n */\n\n@Injectable()\nexport class NotificationService {\n\n  private errors: any = this.bwcService.getErrors();\n  \n  constructor(\n    private logger: Logger,\n    private bwcService: BwcService,\n    private configService: ConfigService,\n    private profileService: ProfileService,\n    private persistenceService: PersistenceService\n  ) {\n    this.logger.info('Hello Notification Service');\n  }\n\n  public subscribe(client, subject: Subject): Promise<any> {\n    let methodPrefix = this.getMethodPrefix(subject);\n    if (!subject || !subject.id) {\n      return Promise.reject(new Error('Missing subject'));\n    }\n    \n    //TODO: Rewrite BWC with promises.\n    let subCall = Promise.promisify(client[methodPrefix + 'ConfirmationSubscribe'](subject.id, {}, function(){}));\n    return subCall().then((res) => {\n      Promise.resolve(this.persistenceService.setTxConfirmNotification(subject.id, subject));\n    });\n  }\n\n  /**\n   * Returns the method prefix used further down the stack. \n   * Today, we only have confirmation events, but it stands to \n   * reason that we'll add more in the future.  \n   * @param subject - TransactionProposal or Referral\n   */\n  private getMethodPrefix(subject: Subject): string {\n    // Switch statements don't work on types yet in TypeScript.  \n    // Using ifs for now.\n    if (<TransactionProposal>subject) {\n      return 'tx';\n    }\n    if (<Referral>subject) {\n      return 'ref';\n    }\n    // Should never get here because of union type.  \n    let n: never;\n    return n;\n  }\n\n  // export class NotificationSubject {\n  //   subscribe(client: any, opts: any): Promise<any>;\n  //   unsubcribe(client: any, id: string): Promise<any>;\n  //   subscriptionExists(id: string): Promise<boolean>;\n  // }\n\n  // export class TxNotification {\n\n  // }\n\n  \n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/notification.service.ts","import { Component } from '@angular/core';\nimport { ModalController, NavParams, ViewController } from 'ionic-angular';\nimport { FeeService } from 'merit/shared/fee/fee.service';\n\n@Component({\n  templateUrl: 'fee-level-modal.html'\n})\nexport class FeeLevelModal {\n  public network: any;\n  public feeLevel: any;\n  public noSave: any;\n  public customFeePerKB: any;\n  public feePerMicrosByte: any;\n  public avgConfirmationTime?: any;\n  public showMinWarning: Boolean;\n  public showMaxWarning: Boolean;\n  public showError: Boolean;\n  public loadingFee: Boolean;\n  public minFeeAllowed: number;\n  public maxFeeAllowed: number;\n  public maxFeeRecommended: number;\n  public selectedFee: {value: any};\n\n  constructor(\n    private navParams: NavParams,\n    private feeService: FeeService,\n    private viewCtrl: ViewController\n  ) {\n    this.network = this.navParams.get('network');\n    this.feeLevel = this.navParams.get('feeLevel');\n    this.noSave = this.navParams.get('noSave');\n    this.customFeePerKB = this.navParams.get('customFeePerKB');\n    this.feePerMicrosByte = this.navParams.get('feePerMicrosByte');\n  }\n  public ok(): void {\n    this.viewCtrl.dismiss({\n      selectedFee: this.selectedFee.value,\n      customFeePerKB: this.customFeePerKB\n    });\n  }\n  public checkFees(): void {}\n  public feeOptValues = this.feeService.getFeeOptValues;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/fee/fee-level-modal.ts","import { Injectable } from '@angular/core';\nimport * as Promise from 'bluebird';\nimport { BwcService } from 'merit/core/bwc.service';\nimport { WalletService } from \"merit/wallets/wallet.service\";\nimport { Logger } from 'merit/core/logger';\nimport { ProfileService } from 'merit/core/profile.service';\nimport * as _ from 'lodash';\nimport { VaultsService } from 'merit/vaults/vaults.service';\nimport { MeritWalletClient } from 'src/lib/merit-wallet-client';\n\n\n@Injectable()\nexport class SpendVaultService {\n\n    private bitcore: any;\n    private walletClient: MeritWalletClient = null;\n    private vault: any;\n\n    constructor(\n        private bwcService: BwcService,\n        private walletService: WalletService,\n        private logger: Logger,\n        private profileService: ProfileService,\n        private vaultsService: VaultsService,\n    ){\n        this.bitcore = bwcService.getBitcore();\n    }\n\n    spendVault(vault: any, spendKey: any, amount: number, address: any): Promise<any> {\n        return this.profileService.getHeadWalletClient().then((walletClient) => {\n          if (!this.walletClient) {\n              this.walletClient = walletClient;\n          }\n          return this.vaultsService.getVaultCoins(walletClient, vault);\n        }).then((coins) => {\n            const tx = this.walletClient.buildSpendVaultTx(vault, coins, spendKey, amount, address, {});\n    \n            console.log(\"SPEND TX\");\n            console.log('Plain: ', tx);\n            console.log('Serialized: ', tx.serialize());\n\n            return { rawTx: tx.serialize(), network: vault.address.network };\n        }).then((tx) => {\n            return this.walletClient.broadcastRawTx(tx);\n        }).catch((err) => {\n            console.log('Error while spending vault:', err);\n            throw err;\n        });;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/vaults/spend/vault-spend.service.ts","import { ConfigService } from './../../../shared/config.service';\nimport { Component } from '@angular/core';\nimport { NavController, NavParams, IonicPage, ModalController, LoadingController } from 'ionic-angular';\nimport { Logger } from 'merit/core/logger';\nimport { WalletService } from 'merit/wallets/wallet.service';\nimport { NotificationService } from 'merit/shared/notification.service';\nimport { TxFormatService } from 'merit/transact/tx-format.service';\nimport { PopupService } from 'merit/core/popup.service';\nimport { ProfileService } from 'merit/core/profile.service';\nimport { TransactionProposal } from 'merit/transact/transaction-proposal.model';\nimport { FeeService } from 'merit/shared/fee/fee.service';\nimport { FeeLevelModal } from 'merit/shared/fee/fee-level-modal';\nimport { BwcService } from 'merit/core/bwc.service';\nimport { SpendVaultService } from 'merit/vaults/spend/vault-spend.service';\n\nimport * as  _  from 'lodash';\nimport * as Promise from 'bluebird';\nimport { MeritWalletClient } from 'src/lib/merit-wallet-client';\nimport { EasySendService } from 'merit/transact/send/easy-send/easy-send.service';\n\n@IonicPage({\n  segment: 'vault/:vaultId/spend/confirm',\n  defaultHistory: ['VaultSpendAmountView']\n})\n@Component({\n  selector: 'vault-spend-confirm-view',\n  templateUrl: 'vault-spend-confirm.html',\n})\nexport class VaultSpendConfirmView {\n\n    // Statics\n    private static CONFIRM_LIMIT_USD = 20;\n    private static FEE_TOO_HIGH_LIMIT_PER = 15;\n\n  private dummyFeeReplaceMeWithActualFeeDontBeADummyMerit: string; \n  private dummyFeeReplaceMeWithActualFeeDontBeADummyUSD : string; \n  private recipient: any;\n  private txData: any = null;\n  private wallet: MeritWalletClient;\n  private vault: any;\n  private walletConfig: any;\n  private wallets: Array<MeritWalletClient>;\n  private unitToMicro: number;\n  private configFeeLevel: string;\n  private showAddress: Boolean = true;\n  private showMerit: boolean = true;\n  private coins: Array<any> = [];\n  private bitcore: any;\n\n  constructor(\n    private configService: ConfigService,\n    private navCtrl: NavController, \n    private navParams: NavParams,\n    private profileService: ProfileService,\n    private logger: Logger,\n    private feeService: FeeService,\n    private walletService: WalletService,\n    private txFormatService: TxFormatService,\n    private popupService: PopupService,\n    private modalCtrl: ModalController,\n    private notificationService: NotificationService,\n    private loadingCtrl: LoadingController,\n    private easySendService: EasySendService,\n    private bwc: BwcService,\n    private spendVaultService: SpendVaultService,\n  ) { \n    this.logger.info(\"Hello SendConfirm View\");\n    this.walletConfig = this.configService.get().wallet;\n    this.bitcore = this.bwc.getBitcore();\n  }\n\n  async ionViewDidLoad() {\n    this.wallets = await this.profileService.getWallets();\n    let toAmount = this.navParams.get('toAmount');\n    this.walletConfig = this.configService.get().wallet;\n    this.wallet = this.navParams.get('wallet');\n\n    this.unitToMicro = this.walletConfig.settings.unitToMicro;\n    this.configFeeLevel = this.walletConfig.settings.feeLevel ? this.walletConfig.settings.feeLevel : 'normal';\n    this.recipient = this.navParams.get('recipient');\n    this.vault = this.navParams.get('vault');\n    this.coins = this.navParams.get('coins');\n    console.log('vault', this.vault);\n\n    this.txData = {\n      toAddress:  this.recipient.address,\n      txp: {},\n      toName: this.recipient.name || '',\n      toAmount: toAmount * this.unitToMicro, // TODO: get the right number from amount page\n    }\n\n    await this.updateAmount();\n    \n    this.logger.log('ionViewDidLoad txData', this.txData);\n  }\n\n  public displayName(): string {\n    if (this.txData.toName) {\n      return this.txData.toName;\n    }\n    return this.txData.toAddress || \"no one\";\n  }\n\n  public toggleCurrency(): void {\n    this.showMerit = !this.showMerit;\n  }\n\n  private updateAmount(): any {\n    if (!this.txData.toAmount) return;\n\n    // Amount\n    this.dummyFeeReplaceMeWithActualFeeDontBeADummyMerit = \n      this.txFormatService.formatAmountStr(this.wallet.getDefaultFee()).split(' ')[0];\n\n    this.txData.amountStr = this.txFormatService.formatAmountStr(this.txData.toAmount);   \n    this.txData.amountValueStr = this.txData.amountStr.split(' ')[0];\n    this.txData.amountUnitStr = this.txData.amountStr.split(' ')[1];\n    this.txFormatService.formatAlternativeStr(this.txData.toAmount).then((v) => {\n      this.txData.alternativeAmountStr = v;\n    });\n    this.txFormatService.formatAlternativeStr(this.wallet.getDefaultFee()).then((v) => {\n      this.dummyFeeReplaceMeWithActualFeeDontBeADummyUSD = v;\n    });\n  }\n\n  private spend() {\n    const network = this.vault.address.network;\n    const spendKey = this.bitcore.HDPrivateKey.fromString(this.wallet.credentials.xPrivKey);\n\n    //convert string address to hash buffers\n    let whitelist = _.map(this.vault.whitelist, (w: string) => {\n      return this.bitcore.Address.fromString(w).toBuffer();\n    });\n\n    this.vault.whitelist = whitelist;\n\n    const recepient = this.navParams.get('recipient');\n\n    return this.spendVaultService.spendVault(this.vault, spendKey,  this.txData.toAmount, recepient.address).then(() => {\n      return this.navCtrl.goToRoot({}).then(() => {\n        return this.navCtrl.push('VaultDetailsView', { vaultId: this.vault._id, vault: this.vault });    \n      });\n    });\n  }\n\n  \n  public toggleAddress() {\n    this.showAddress = !this.showAddress;\n  };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/vaults/spend/confirm/vault-spend-confirm.ts"],"sourceRoot":""}