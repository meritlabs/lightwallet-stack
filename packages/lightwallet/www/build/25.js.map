{"version":3,"sources":["../../src/app/utilities/import/import-scan/import-scan.module.ts","../../node_modules/@ionic-native/barcode-scanner/index.js","../../src/app/utilities/import/import-scan/import-scan.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACgC;AAEjB;AAc/D,IAAa,yBAAyB,GAAtC;CAAyC;AAA5B,yBAAyB;IAXrC,+DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,sGAAc;SACf;QACD,SAAS,EAAE;YACT,qFAAc;SACf;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,sGAAc,CAAC;SACzC;KACF,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;AClBtC;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C,iBAAiB,aAAa;AAC9B;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,IAAI;AACxB,iBAAiB;AACjB;AACA,6DAA6D,QAAQ;AACrE;AACA,SAAS,kEAAmB;AAC5B;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR,iC;;;;;;;;;;;;;;;;;;;;;;ACxG0C;AACK;AACJ;AACoB;AAU/D,IAAa,cAAc,GAA3B;IAQE,YACU,QAAuB,EACvB,cAA8B,EAC9B,MAAa;QAFb,aAAQ,GAAR,QAAQ,CAAe;QACvB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAO;IAGvB,CAAC;IAED,KAAK;QACH,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAED,cAAc;QAEZ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,SAAS,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE;YAClE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;YACb,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;AA7BY,cAAc;IAJ1B,gEAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;OACG;KAChC,CAAC;8FAUiC;QACP,mEAAc;QACvB,MAAM;AAkBxB;SA7BY,cAAc,gB","file":"25.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ImportScanView } from 'merit/utilities/import/import-scan/import-scan';\n\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner'; \n\n\n@NgModule({\n  declarations: [\n    ImportScanView,\n  ],\n  providers: [\n    BarcodeScanner \n  ],\n  imports: [\n    IonicPageModule.forChild(ImportScanView),\n  ],\n})\nexport class ImportScanComponentModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/utilities/import/import-scan/import-scan.module.ts","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Injectable } from '@angular/core';\r\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\r\n/**\r\n * @name Barcode Scanner\r\n * @description\r\n * The Barcode Scanner Plugin opens a camera view and automatically scans a barcode, returning the data back to you.\r\n *\r\n * Requires Cordova plugin: `phonegap-plugin-barcodescanner`. For more info, please see the [BarcodeScanner plugin docs](https://github.com/phonegap/phonegap-plugin-barcodescanner).\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { BarcodeScanner } from '@ionic-native/barcode-scanner';\r\n *\r\n * constructor(private barcodeScanner: BarcodeScanner) { }\r\n *\r\n * ...\r\n *\r\n *\r\n * this.barcodeScanner.scan().then((barcodeData) => {\r\n *  // Success! Barcode data is here\r\n * }, (err) => {\r\n * \t// An error occurred\r\n * });\r\n * ```\r\n * @interfaces\r\n * BarcodeScannerOptions\r\n * BarcodeScanResult\r\n */\r\nvar BarcodeScanner = (function (_super) {\r\n    __extends(BarcodeScanner, _super);\r\n    function BarcodeScanner() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.Encode = {\r\n            TEXT_TYPE: 'TEXT_TYPE',\r\n            EMAIL_TYPE: 'EMAIL_TYPE',\r\n            PHONE_TYPE: 'PHONE_TYPE',\r\n            SMS_TYPE: 'SMS_TYPE'\r\n        };\r\n        return _this;\r\n    }\r\n    /**\r\n     * Open the barcode scanner.\r\n     * @param options {BarcodeScannerOptions} Optional options to pass to the scanner\r\n     * @returns {Promise<any>} Returns a Promise that resolves with scanner data, or rejects with an error.\r\n     */\r\n    BarcodeScanner.prototype.scan = function (options) { return; };\r\n    /**\r\n     * Encodes data into a barcode.\r\n     * NOTE: not well supported on Android\r\n     * @param type {string} Type of encoding\r\n     * @param data {any} Data to encode\r\n     * @returns {Promise<any>}\r\n     */\r\n    BarcodeScanner.prototype.encode = function (type, data) { return; };\r\n    BarcodeScanner.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    BarcodeScanner.ctorParameters = function () { return []; };\r\n    __decorate([\r\n        Cordova({\r\n            callbackOrder: 'reverse'\r\n        }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], BarcodeScanner.prototype, \"scan\", null);\r\n    __decorate([\r\n        Cordova(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], BarcodeScanner.prototype, \"encode\", null);\r\n    BarcodeScanner = __decorate([\r\n        Plugin({\r\n            pluginName: 'BarcodeScanner',\r\n            plugin: 'phonegap-plugin-barcodescanner',\r\n            pluginRef: 'cordova.plugins.barcodeScanner',\r\n            repo: 'https://github.com/phonegap/phonegap-plugin-barcodescanner',\r\n            platforms: ['Android', 'BlackBerry 10', 'Browser', 'iOS', 'Windows']\r\n        })\r\n    ], BarcodeScanner);\r\n    return BarcodeScanner;\r\n}(IonicNativePlugin));\r\nexport { BarcodeScanner };\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/barcode-scanner/index.js\n// module id = 845\n// module chunks = 25","import { Component } from '@angular/core';\nimport { IonicPage, ViewController } from 'ionic-angular';\nimport { Logger } from \"merit/core/logger\";\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner'; \n\n\ndeclare var cordova:any;\n\n@IonicPage({\n  defaultHistory: ['ImportView']\n})\n@Component({\n  selector: 'view-import-scan',\n  templateUrl: 'import-scan.html',\n})\nexport class ImportScanView {\n\n  public scannerAvailable:boolean;\n\n  public scannerPermitted:boolean;\n\n  public err; \n\n  constructor(\n    private viewCtrl:ViewController,\n    private barcodeScanner: BarcodeScanner,\n    private logger:Logger\n  ) {\n\n  }\n\n  close() {\n    this.viewCtrl.dismiss();\n  }\n\n  ionViewDidLoad() {\n\n    this.barcodeScanner.scan({formats: 'QR_CODE'}).then((barcodeData) => {\n      this.viewCtrl.dismiss(barcodeData.text);\n    }).catch((err) => { \n        this.err = err;  \n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/utilities/import/import-scan/import-scan.ts"],"sourceRoot":""}