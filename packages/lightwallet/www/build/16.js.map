{"version":3,"sources":["../../src/app/vaults/vault-details/vault-details.module.ts","../../src/app/shared/shared.module.ts","../../src/app/shared/to-unit.pipe.ts","../../src/app/shared/to-fiat.pipe.ts","../../src/app/vaults/vault-details/vault-details.ts"],"names":[],"mappings":"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","file":"16.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { VaultDetailsView } from 'merit/vaults/vault-details/vault-details';\nimport { ToUnitPipe } from 'merit/shared/to-unit.pipe';\nimport { ToFiatPipe } from 'merit/shared/to-fiat.pipe';\nimport { SharedModule } from 'merit/shared/shared.module';\nimport { MomentModule } from 'angular2-moment';\n\n/*\n  ToDo: Work to get this lazy-loadable as possible. \n*/\n@NgModule({\n  declarations: [\n    VaultDetailsView\n  ],\n  imports: [\n    IonicPageModule.forChild(VaultDetailsView),\n    SharedModule,\n    MomentModule,\n  ],\n  providers: [\n  ]\n})\nexport class VaultDetailsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/vaults/vault-details/vault-details.module.ts","import { NgModule } from '@angular/core';\nimport { GravatarComponent } from 'merit/shared/gravatar.component';\nimport { ToUnitPipe } from 'merit/shared/to-unit.pipe';\nimport { ToFiatPipe } from 'merit/shared/to-fiat.pipe';\nimport { TranslateModule } from '@ngx-translate/core';\n\n// This module manaages the sending of money.\n@NgModule({\n  declarations: [\n    ToUnitPipe,\n    ToFiatPipe\n  ],\n  imports: [\n  ],\n  exports: [\n    ToUnitPipe,\n    ToFiatPipe,\n    TranslateModule\n  ]\n})\nexport class SharedModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/shared.module.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport { ConfigService } from 'merit/shared/config.service';\nimport { TxFormatService } from 'merit/transact/tx-format.service';\n\n@Pipe({ name: 'toUnit' })\nexport class ToUnitPipe implements PipeTransform {\n  private unitCode: string;\n  \n  constructor(\n    private configProvider: ConfigService,\n    private txFormatProvider: TxFormatService\n  ) {\n    this.unitCode = this.configProvider.get().wallet.settings.unitCode;\n  }\n  transform(value: string, satoshis: number): any {\n    return this.txFormatProvider.formatAmountStr(satoshis);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/to-unit.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport { ConfigService } from 'merit/shared/config.service';\nimport { TxFormatService } from 'merit/transact/tx-format.service';\nimport * as Promise from 'bluebird';\n\n@Pipe({ name: 'toFiat' })\nexport class ToFiatPipe implements PipeTransform {\n  private unitCode: string;\n\n  constructor(\n    private configProvider: ConfigService,\n    private txFormatProvider: TxFormatService\n  ) { \n    this.unitCode = this.configProvider.get().wallet.settings.unitCode;\n  }\n  transform(value: string, satoshis: number): Promise<string> {\n    return this.txFormatProvider.formatAlternativeStr(satoshis).then((altSr:string) => {\n      return Promise.resolve(altSr);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/to-fiat.pipe.ts","import * as _ from \"lodash\";\nimport * as Promise from 'bluebird';\n\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { VaultsService } from 'merit/vaults/vaults.service';\nimport { BwcService } from 'merit/core/bwc.service';\nimport { ProfileService } from 'merit/core/profile.service';\nimport { Logger } from 'merit/core/logger';\nimport { CreateVaultService } from \"merit/vaults/create-vault/create-vault.service\";\nimport { WalletService } from \"merit/wallets/wallet.service\";\nimport { MeritWalletClient } from 'src/lib/merit-wallet-client';\nimport { TxFormatService } from \"merit/transact/tx-format.service\";\nimport { FiatAmount } from 'merit/shared/fiat-amount.model';\nimport { RateService } from 'merit/transact/rate.service';\n\n\n@IonicPage({\n  segment: 'vault/:vaultId',\n  defaultHistory: ['WalletsView']\n})\n@Component({\n  selector: 'vault-details-view',\n  templateUrl: 'vault-details.html',\n})\nexport class VaultDetailsView {\n\n  public vault: any;\n  public whitelist: Array<any> = [];\n  public coins: Array<any> = [];\n  public transactions: Array<any> = [];\n  private bitcore: any = null;\n  private walletClient: MeritWalletClient;\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    private logger:Logger,\n    private profileService: ProfileService,\n    private walletService: WalletService,\n    private vaultsService: VaultsService,\n    private bwc: BwcService,\n    private txFormatService:TxFormatService,\n    private rateService: RateService,\n  ) {\n    // We can assume that the wallet data has already been fetched and\n    // passed in from the wallets (list) view.  This enables us to keep\n    // things fast and smooth.  We can refresh as needed.\n    this.vault = this.navParams.get('vault');\n    this.bitcore = this.bwc.getBitcore();\n    this.whitelist = this.vault.whitelist;\n    console.log(\"Inside the vault-details view.\");\n    console.log('Vault to display:', this.vault);\n  }\n\n  ionViewDidLoad() {\n    console.log(\"Vault-Detail View Did Load.\");\n    console.log(this.vault);\n\n    Promise.all([\n      this.getAllWallets().then((wallets) => {\n        return _.map(wallets, (w) => {\n          const name = w.name || w._id;\n          const addr = this.bitcore.HDPublicKey.fromString(w.credentials.xPubKey).publicKey.toAddress().toString();\n          return { id: w.id, name: name, address: addr, type: 'wallet', walletClientId: w.id , walletClient: w};\n        });\n      }),\n      // fetch users vaults\n      // ToDo: uncomment when vaults support vault addresses in whitelists\n      // this.getAllVaults().then((vaults) => {\n      //   return _.map(vaults, (v) => {\n      //     const name = v.name || v._id;\n      //     const addr = new this.bitcore.Address(v.address).toString();\n      //     return { id: v._id, name: name, address: addr, type: 'vault' };\n      //   });\n      // }),\n      // fetch coins\n    ]).then((arr: Array<Array<any>>) => {\n      const whitelistCandidates = _.flatten(arr);\n\n      return Promise.map(this.vault.whitelist, (wl) => {\n        return Promise.map(whitelistCandidates, (candidate) => {\n          if (candidate.type === 'vault') {\n            if (wl == candidate.address) return candidate;\n          } else { \n            return candidate.walletClient.getMainAddresses({}).then((addresses: Array<any>) => {\n              const found = _.find(addresses, { address: wl });\n              if (found) {\n                candidate.walletClient = null;\n                candidate.address = wl;\n                return candidate;\n              }\n            });\n          }\n          return null;\n        });\n      }).then((unfilteredWhitelist) => {\n        const results = _.compact(_.flatten(unfilteredWhitelist));\n        this.whitelist = results;\n        return Promise.resolve();\n      });\n    }).then(() => {\n      return this.getVaultTxHistory().then((txs) => {\n        this.transactions = _.map(txs, this.processTx.bind(this));\n        this.vault.completeHistory = txs;\n        this.formatAmounts();\n        return Promise.resolve();\n      });\n    });\n  }\n\n  toResetVault() {\n    this.navCtrl.push('VaultRenewView', { vaultId: this.vault._id, vault: this.vault });\n  }\n\n  goToTxDetails(tx: any) {\n    return this.profileService.getHeadWalletClient().then((walletClient) => {\n      this.navCtrl.push(\n        'TxDetailsView',\n        { wallet: walletClient, walletId: walletClient.credentials.walletId, vaultId: this.vault._id, vault: this.vault, txId: tx.txid }\n      );\n    });\n  }\n\n  spendToAddress(address): void {\n    let wallet = null;\n    this.profileService.getHeadWalletClient().then((w) => {\n      wallet = w;\n      return this.vaultsService.getVaultCoins(w, this.vault);\n    }).then((coins) => {\n      this.coins = coins;\n      this.navCtrl.push('VaultSpendAmountView', { recipient: address, wallet: wallet, vault: this.vault, vaultId: this.vault.id, coins: coins });\n    });\n  }\n\n  private getAllWallets(): Promise<Array<any>> {\n    const wallets = this.profileService.getWallets().then((ws) => {\n      return Promise.all(_.map(ws, async (wallet:any) => {\n        wallet.status = await this.walletService.getStatus(wallet);\n        return wallet;\n      }));\n    })\n    return wallets;\n  }\n\n  private getAllVaults(): Promise<Array<any>> {\n    return this.profileService.getHeadWalletClient().then((walletClient) => {\n      this.walletClient = walletClient;\n      return this.vaultsService.getVaults(walletClient);\n    });\n  }\n\n  private getCoins(walletClient: MeritWalletClient): Promise<Array<any>> {\n    return this.vaultsService.getVaultCoins(walletClient, this.vault);\n  };\n\n  private getVaultTxHistory(): Promise<Array<any>> {\n    return this.profileService.getHeadWalletClient().then((walletClient) => {\n      return this.vaultsService.getVaultTxHistory(walletClient, this.vault);\n    });\n  };\n\n  private formatAmounts(): void {\n    this.profileService.getHeadWalletClient().then((walletClient: MeritWalletClient) => {\n      return this.getCoins(walletClient).then((coins) => {\n        this.vault.amount = _.sumBy(coins, 'micros');\n        this.vault.altAmount = this.rateService.fromMicrosToFiat(this.vault.amount,walletClient.cachedStatus.alternativeIsoCode);\n        this.vault.altAmountStr = new FiatAmount(this.vault.altAmount);\n        this.vault.amountStr = this.txFormatService.formatAmountStr(this.vault.amount);\n      });\n    });\n  }\n\n  private processTx(tx: any): any {\n    const thisAddr = new this.bitcore.Address(this.vault.address).toString();\n    const summ = _.reduce(tx.outputs, (acc: number, output: any) => {\n      if (output.address != thisAddr) {\n        return acc;\n      }\n      return acc + output.amount;\n    }, 0);\n\n    tx.amountStr = this.txFormatService.formatAmountStr(summ);\n    return tx;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/vaults/vault-details/vault-details.ts"],"sourceRoot":""}