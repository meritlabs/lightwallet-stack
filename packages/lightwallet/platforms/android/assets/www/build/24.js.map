{"version":3,"sources":["../../src/app/settings/settings-about/settings-about.module.ts","../../node_modules/@ionic-native/in-app-browser/index.js","../../src/app/settings/settings-about/settings-about.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAyC;AACO;AACiC;AACpB;AACD;AAc5D,IAAa,uBAAuB,GAApC;CAAuC;AAA1B,uBAAuB;IAZnC,+DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,uGAAiB;SAClB;QACD,SAAS,EAAE;YACT,kFAAY;YACZ,mFAAU;SACX;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,uGAAiB,CAAC;SAC5C;KACF,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;AClBpC;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AAC+C;AAC/C;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,iCAAiC,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,sBAAsB,OAAO;AAC7B,iBAAiB;AACjB;AACA,oEAAoE,QAAQ;AAC5E;AACA;AACA,mBAAmB,OAAO;AAC1B,iBAAiB;AACjB;AACA,6DAA6D,QAAQ;AACrE;AACA;AACA,qBAAqB,OAAO;AAC5B,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA;AACA,gCAAgC,uFAAuF;AACvH,SAAS;AACT;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,uBAAuB,OAAO;AAC9B,wBAAwB,OAAO;AAC/B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS,kEAAmB;AAC5B;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR,iC;;;;;;;;;;;;;;;;;;;;;;AC1L0C;AACgC;AACb;AACD;AAO5D,IAAa,iBAAiB,GAA9B;IAME,YACU,OAAsB,EACtB,SAAoB,EACnB,SAAyB,EAC1B,YAAyB,EACzB,kBAA6B;QAJ7B,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACnB,cAAS,GAAT,SAAS,CAAgB;QAC1B,iBAAY,GAAZ,YAAY,CAAa;QACzB,uBAAkB,GAAlB,kBAAkB,CAAW;IAGvC,CAAC;IAED,KAAK,CAAC,cAAc;QAElB,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;QAEnD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC;QACpD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC;QAC1D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC;IAE5D,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACtC,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACtC,CAAC;IAED,QAAQ;QAEN,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAClC,KAAK,EAAE,eAAe;YACtB,OAAO,EAAE,8GAA8G;YACvH,OAAO,EAAE;gBACP,EAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,EAAE,GAAE,CAAC,EAAC;gBACnD,EAAC,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,GAAG,EAAE;wBAClC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACzC,CAAC,EAAE;aACJ;SACF,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,EAAE,CAAC;IACpB,CAAC;CAEF;AAlDY,iBAAiB;IAJ7B,gEAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;OACG;KACnC,CAAC;yEAQgC;QACX,sEAAS;QACT,mFAAe;QACb,qFAAY;QACN,UAAU;AAuCxC;SAlDY,iBAAiB,gB","file":"24.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SettingsAboutView } from 'merit/settings/settings-about/settings-about';\nimport { AppService } from \"merit/core/app-settings.service\";\nimport { InAppBrowser } from '@ionic-native/in-app-browser';\n\n@NgModule({\n  declarations: [\n    SettingsAboutView,\n  ],\n  providers: [\n    InAppBrowser,\n    AppService\n  ],\n  imports: [\n    IonicPageModule.forChild(SettingsAboutView),\n  ],\n})\nexport class SettingsAboutViewModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/settings/settings-about/settings-about.module.ts","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Injectable } from '@angular/core';\r\nimport { Plugin, CordovaInstance, InstanceCheck, IonicNativePlugin } from '@ionic-native/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n/**\r\n * @hidden\r\n */\r\nvar InAppBrowserObject = (function () {\r\n    /**\r\n     * Opens a URL in a new InAppBrowser instance, the current browser instance, or the system browser.\r\n     * @param {string} url     The URL to load.\r\n     * @param {string} [target=\"self\"]  The target in which to load the URL, an optional parameter that defaults to _self.\r\n     *                 _self: Opens in the WebView if the URL is in the white list, otherwise it opens in the InAppBrowser.\r\n     *                 _blank: Opens in the InAppBrowser.\r\n     *                 _system: Opens in the system's web browser.\r\n     * @param {string | InAppBrowserOptions} [options] Options for the InAppBrowser. Optional, defaulting to: location=yes.\r\n     *                 The options string must not contain any blank space, and each feature's\r\n     *                 name/value pairs must be separated by a comma. Feature names are case insensitive.\r\n     */\r\n    function InAppBrowserObject(url, target, options) {\r\n        try {\r\n            if (options && typeof options !== 'string') {\r\n                options = Object.keys(options).map(function (key) { return key + \"=\" + options[key]; }).join(',');\r\n            }\r\n            this._objectInstance = cordova.InAppBrowser.open(url, target, options);\r\n        }\r\n        catch (e) {\r\n            window.open(url, target);\r\n            console.warn('Native: InAppBrowser is not installed or you are running on a browser. Falling back to window.open.');\r\n        }\r\n    }\r\n    /**\r\n     * Displays an InAppBrowser window that was opened hidden. Calling this has no effect\r\n     * if the InAppBrowser was already visible.\r\n     */\r\n    InAppBrowserObject.prototype.show = function () { };\r\n    /**\r\n     * Closes the InAppBrowser window.\r\n     */\r\n    InAppBrowserObject.prototype.close = function () { };\r\n    /**\r\n     * Hides an InAppBrowser window that is currently shown. Calling this has no effect\r\n     * if the InAppBrowser was already hidden.\r\n     */\r\n    InAppBrowserObject.prototype.hide = function () { };\r\n    /**\r\n     * Injects JavaScript code into the InAppBrowser window.\r\n     * @param script {Object} Details of the script to run, specifying either a file or code key.\r\n     * @returns {Promise<any>}\r\n     */\r\n    InAppBrowserObject.prototype.executeScript = function (script) { return; };\r\n    /**\r\n     * Injects CSS into the InAppBrowser window.\r\n     * @param css {Object} Details of the script to run, specifying either a file or code key.\r\n     * @returns {Promise<any>}\r\n     */\r\n    InAppBrowserObject.prototype.insertCSS = function (css) { return; };\r\n    /**\r\n     * A method that allows you to listen to events happening in the browser.\r\n     * @param event {string} Name of the event\r\n     * @returns {Observable<InAppBrowserEvent>} Returns back an observable that will listen to the event on subscribe, and will stop listening to the event on unsubscribe.\r\n     */\r\n    InAppBrowserObject.prototype.on = function (event) {\r\n        var _this = this;\r\n        return new Observable(function (observer) {\r\n            _this._objectInstance.addEventListener(event, observer.next.bind(observer));\r\n            return function () { return _this._objectInstance.removeEventListener(event, observer.next.bind(observer)); };\r\n        });\r\n    };\r\n    __decorate([\r\n        CordovaInstance({ sync: true }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", []),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], InAppBrowserObject.prototype, \"show\", null);\r\n    __decorate([\r\n        CordovaInstance({ sync: true }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", []),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], InAppBrowserObject.prototype, \"close\", null);\r\n    __decorate([\r\n        CordovaInstance({ sync: true }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", []),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], InAppBrowserObject.prototype, \"hide\", null);\r\n    __decorate([\r\n        CordovaInstance(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], InAppBrowserObject.prototype, \"executeScript\", null);\r\n    __decorate([\r\n        CordovaInstance(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], InAppBrowserObject.prototype, \"insertCSS\", null);\r\n    __decorate([\r\n        InstanceCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String]),\r\n        __metadata(\"design:returntype\", Observable)\r\n    ], InAppBrowserObject.prototype, \"on\", null);\r\n    return InAppBrowserObject;\r\n}());\r\nexport { InAppBrowserObject };\r\n/**\r\n * @name In App Browser\r\n * @description Launches in app Browser\r\n * @usage\r\n * ```typescript\r\n * import { InAppBrowser } from '@ionic-native/in-app-browser';\r\n *\r\n * constructor(private iab: InAppBrowser) { }\r\n *\r\n *\r\n * ...\r\n *\r\n *\r\n * const browser = this.iab.create('https://ionicframework.com/');\r\n *\r\n * browser.executeScript(...);\r\n * browser.insertCSS(...);\r\n * browser.close();\r\n *\r\n * ```\r\n * @classes\r\n * InAppBrowserObject\r\n * @interfaces\r\n * InAppBrowserEvent\r\n * InAppBrowserOptions\r\n */\r\nvar InAppBrowser = (function (_super) {\r\n    __extends(InAppBrowser, _super);\r\n    function InAppBrowser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Opens a URL in a new InAppBrowser instance, the current browser instance, or the system browser.\r\n     * @param  url {string}     The URL to load.\r\n     * @param  target {string}  The target in which to load the URL, an optional parameter that defaults to _self.\r\n     * @param  options {string} Options for the InAppBrowser. Optional, defaulting to: location=yes.\r\n     *                 The options string must not contain any blank space, and each feature's\r\n     *                 name/value pairs must be separated by a comma. Feature names are case insensitive.\r\n     * @returns {InAppBrowserObject}\r\n     */\r\n    InAppBrowser.prototype.create = function (url, target, options) {\r\n        return new InAppBrowserObject(url, target, options);\r\n    };\r\n    InAppBrowser.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    InAppBrowser.ctorParameters = function () { return []; };\r\n    InAppBrowser = __decorate([\r\n        Plugin({\r\n            pluginName: 'InAppBrowser',\r\n            plugin: 'cordova-plugin-inappbrowser',\r\n            pluginRef: 'cordova.InAppBrowser',\r\n            repo: 'https://github.com/apache/cordova-plugin-inappbrowser',\r\n            platforms: ['AmazonFire OS', 'Android', 'BlackBerry 10', 'Browser', 'Firefox OS', 'iOS', 'macOS', 'Ubuntu', 'Windows', 'Windows Phone']\r\n        })\r\n    ], InAppBrowser);\r\n    return InAppBrowser;\r\n}(IonicNativePlugin));\r\nexport { InAppBrowser };\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/in-app-browser/index.js\n// module id = 807\n// module chunks = 0 1 2 3 4 5 24","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, AlertController } from 'ionic-angular';\nimport { AppService } from \"merit/core/app-settings.service\";\nimport { InAppBrowser } from '@ionic-native/in-app-browser';\n\n@IonicPage()\n@Component({ \n  selector: 'view-settings-about',\n  templateUrl: 'settings-about.html',\n})\nexport class SettingsAboutView {\n\n  public version:string;\n  public commitHash:string; \n  public repoUrl:string;\n\n  constructor(\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private  alertCtrl:AlertController,\n    private inAppBrowser:InAppBrowser,\n    private appSettingsService:AppService\n  ) {\n\n  }\n\n  async ionViewDidLoad() {\n\n    let info = await this.appSettingsService.getInfo();\n\n    this.version = this.appSettingsService.info.version;\n    this.commitHash = this.appSettingsService.info.commitHash;\n    this.repoUrl = this.appSettingsService.info.gitHubRepoUrl; \n\n  }\n\n  toSessionLog() {\n    this.navCtrl.push('SessionLogView');\n  }\n\n  toTermsOfUse() {\n    this.navCtrl.push('TermsOfUseView');\n  }\n\n  toGithub() {\n    \n    let confirm = this.alertCtrl.create({\n      title: 'External link',\n      message: 'You can see the latest developments and contribute to this open source app by visiting our project on GitHub',\n      buttons: [\n        {text: 'Cancel', role: 'cancel', handler: () => {}},\n        {text: 'Open GitHub', handler: () => {\n          this.inAppBrowser.create(this.repoUrl);\n        } }\n      ]\n    });\n\n    confirm.present();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/settings/settings-about/settings-about.ts"],"sourceRoot":""}