{"version":3,"sources":["../../src/app/vaults/renew-vault/confirmation/confirmation.module.ts","../../src/app/vaults/renew-vault/renew-vault.service.ts","../../src/app/vaults/renew-vault/confirmation/confirmation.ts"],"names":[],"mappings":"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","file":"22.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { VaultRenewConfirmationView } from 'merit/vaults/renew-vault/confirmation/confirmation';\nimport { RenewVaultService } from 'merit/vaults/renew-vault/renew-vault.service';\n\n@NgModule({\n  declarations: [\n    VaultRenewConfirmationView,\n  ],\n  providers: [\n    RenewVaultService,\n  ],\n  imports: [\n    IonicPageModule.forChild(VaultRenewConfirmationView),\n  ],\n})\nexport class VaultRenewConfirmationViewModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/vaults/renew-vault/confirmation/confirmation.module.ts","import { Injectable } from '@angular/core';\nimport * as Promise from 'bluebird';\nimport { BwcService } from 'merit/core/bwc.service';\nimport { WalletService } from \"merit/wallets/wallet.service\";\nimport { Logger } from 'merit/core/logger';\nimport { ProfileService } from 'merit/core/profile.service';\nimport * as _ from 'lodash';\nimport { VaultsService } from 'merit/vaults/vaults.service';\nimport { MeritWalletClient } from 'src/lib/merit-wallet-client';\n\n\n@Injectable()\nexport class RenewVaultService {\n\n    private bitcore: any;\n    private walletClient: MeritWalletClient = null;\n    private vault: any;\n\n    constructor(\n        private bwcService: BwcService,\n        private walletService: WalletService,\n        private logger: Logger,\n        private profileService: ProfileService,\n        private vaultsService: VaultsService,\n    ){\n        this.bitcore = bwcService.getBitcore();\n    }\n\n    renewVault(vault: any, masterKey: any): Promise<any> {\n        return this.profileService.getHeadWalletClient().then((walletClient) => {\n          if (!this.walletClient) {\n              this.walletClient = walletClient;\n          }\n          return this.vaultsService.getVaultCoins(walletClient, vault);\n        }).then((coins) => {\n      \n            let address = this.bitcore.Address.fromObject(vault.address);\n            let network = this.walletClient.credentials.network;\n\n            let tx = this.walletClient.buildRenewVaultTx(coins, vault, masterKey, {network: network});\n    \n            console.log(\"RENEW TX\");\n            console.log('tx: ', tx);\n            console.log('Serialized: ', tx.serialize());\n            vault.coins = [{ raw: tx.serialize(), network: network}];\n\n            return this.walletClient.renewVault(vault);\n        }).catch((err) => {\n            throw err;\n        });;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/vaults/renew-vault/renew-vault.service.ts","import * as _ from 'lodash';\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { PopupService } from \"merit/core/popup.service\";\nimport * as Promise from 'bluebird';\nimport { WalletService } from 'merit/wallets/wallet.service';\nimport { VaultsService } from 'merit/vaults/vaults.service';\nimport { BwcService } from 'merit/core/bwc.service';\nimport { ProfileService } from 'merit/core/profile.service';\nimport { RenewVaultService } from 'merit/vaults/renew-vault/renew-vault.service';\nimport { Credentials } from 'src/lib/merit-wallet-client/lib/credentials';\nimport { MeritWalletClient } from 'src/lib/merit-wallet-client';\nimport { MeritToastController } from \"merit/core/toast.controller\";\nimport { ToastConfig } from \"merit/core/toast.config\";\n\n@IonicPage({\n  segment: 'vault/:vaultId/renew/confirmation',\n  defaultHistory: ['VaultRenewView']\n})\n@Component({ \n  selector: 'view-renew-confirmation',\n  templateUrl: 'confirmation.html',\n})\nexport class VaultRenewConfirmationView {\n\n  private updatedVault: any;\n  private vault: any;\n  private bitcore: any;\n  private formData = { masterKeyMnemonic: '' };\n  private walletClient: MeritWalletClient = null;\n\n  constructor(\n    private navCtrl:NavController,\n    public navParams: NavParams,\n    private bwc: BwcService,  \n    private toastCtrl:MeritToastController,\n    private renewVaultService: RenewVaultService,\n  ){\n    this.updatedVault = this.navParams.get('updatedVault');\n    this.vault = this.navParams.get('vault');\n    this.bitcore = this.bwc.getBitcore();\n    this.walletClient = this.navParams.get('walletClient');\n  }\n\n  ionViewDidLoad() {\n    console.log('confirmation view', this.updatedVault, this.vault);\n  }\n\n  private sanatizeMnemonic(rawmnemonic: string): string{\n    let trimmed = rawmnemonic.trim();\n    return trimmed.toLowerCase();\n  }\n\n  private renew() {\n    // create master key from mnemonic\n    const network = this.vault.address.network;\n\n    //validate mnemonic\n    let masterKeyMnemonic;\n    try {\n      const sanatizedMasterKeyMnemonic = this.sanatizeMnemonic(this.formData.masterKeyMnemonic);\n      masterKeyMnemonic = this.walletClient.getNewMnemonic(sanatizedMasterKeyMnemonic);\n    } catch(ex) {\n      return this.toastCtrl.create({\n        message: 'The master key must only contain words seperated by spaces.',\n        cssClass: ToastConfig.CLASS_ERROR\n      }).present();\n    }\n\n    const xMasterKey = masterKeyMnemonic.toHDPrivateKey('', network);\n    console.log('xMasterKey', xMasterKey);\n    console.log('MasterPub', xMasterKey.publicKey.toString());\n    console.log('OrigPubKey', new this.bitcore.PublicKey(this.updatedVault.masterPubKey, network).toString());\n\n    return this.renewVaultService.renewVault(this.updatedVault, xMasterKey).then(() => {\n      return this.navCtrl.goToRoot({}).then(() => {\n        return this.navCtrl.push('VaultDetailsView', { vaultId: this.vault._id, vault: this.vault });\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/vaults/renew-vault/confirmation/confirmation.ts"],"sourceRoot":""}