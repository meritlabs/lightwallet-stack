{"version":3,"sources":["../../src/app/vaults/create-vault/deposit/deposit.module.ts","../../src/app/vaults/create-vault/deposit/deposit.ts"],"names":[],"mappings":"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","file":"33.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { CreateVaultDepositView } from 'merit/vaults/create-vault/deposit/deposit';\n\nimport { MnemonicService } from \"merit/utilities/mnemonic/mnemonic.service\";\nimport { BwcService } from \"merit/core/bwc.service\";\n\n@NgModule({\n  declarations: [\n    CreateVaultDepositView,\n  ],\n  providers: [\n    MnemonicService,\n    BwcService,\n  ],\n  imports: [\n    IonicPageModule.forChild(CreateVaultDepositView),\n  ],\n})\nexport class CreateVaultDepositComponentModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/vaults/create-vault/deposit/deposit.module.ts","import * as Promise from 'bluebird';\nimport * as _ from 'lodash';\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { CreateVaultService } from \"merit/vaults/create-vault/create-vault.service\";\nimport { WalletService } from \"merit/wallets/wallet.service\";\nimport { ProfileService } from \"merit/core/profile.service\";\nimport { BwcService } from \"merit/core/bwc.service\";\nimport { MeritWalletClient } from 'src/lib/merit-wallet-client';\nimport { Logger } from 'merit/core/logger';\n\n@IonicPage({\n  defaultHistory: ['WalletsView']\n})\n@Component({\n  selector: 'view-create-vault-deposit',\n  templateUrl: 'deposit.html',\n})\nexport class CreateVaultDepositView {\n\n  public formData = { totalAvailable: 0, amountToDeposit: null, amountAvailable: 0, selectedWallet: null, walletName: '' };\n  public isNextAvailable = false;\n  private bitcore = null;\n\n  constructor(\n    private navCtrl: NavController,\n    private createVaultService: CreateVaultService,\n    private profileService: ProfileService,\n    private walletService: WalletService,\n    private bwcService: BwcService,\n    private logger: Logger,\n    public navParams: NavParams,\n  ) {}\n\n  checkNextAvailable() {\n    this.isNextAvailable = this.formData.amountToDeposit > 0 && this.formData.amountAvailable >= this.formData.amountToDeposit;\n  }\n\n  ionViewDidLoad() {\n    this.bitcore = this.bwcService.getBitcore();\n    \n    let data = this.createVaultService.getData();\n    this.formData.amountToDeposit = data.amountToDeposit;\n    this.formData.amountAvailable = data.amountAvailable;\n    this.checkNextAvailable();\n\n    this.getAllWallets().then((wallets: Array<MeritWalletClient>) => {\n      _.each(wallets, (w) => this.logger.info(w));\n      const wallet = wallets[0];\n      const computed = wallet.status.balance.availableConfirmedAmount;\n      const total = wallet.status.balance.availableAmount;\n      const mrt = this.bitcore.Unit.fromMicros(computed).toMRT();\n      const totalMrt = this.bitcore.Unit.fromMicros(total).toMRT();\n      this.formData.selectedWallet = wallet;\n      this.formData.amountAvailable = mrt;\n      this.formData.totalAvailable = totalMrt;\n      this.formData.walletName = wallet.name || wallet.id;\n    });\n\n    this.checkNextAvailable();\n  }\n\n  toMasterKey() {\n    this.createVaultService.updateData(this.formData);\n    this.navCtrl.push('CreateVaultMasterKeyView', { refreshVaultList: this.navParams.get('refreshVaultList') });\n  }\n\n  private getAllWallets(): Promise<Array<MeritWalletClient>> {\n    return this.profileService.getWallets().then((ws) => {\n      return Promise.all(_.map(ws, async (wallet: MeritWalletClient) => { \n        wallet.status = await this.walletService.getStatus(wallet);\n        return wallet; \n      }));\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/vaults/create-vault/deposit/deposit.ts"],"sourceRoot":""}