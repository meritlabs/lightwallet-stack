{"version":3,"sources":["../../src/app/vaults/create-vault/general-info/general-info.module.ts","../../src/app/vaults/create-vault/general-info/general-info.ts"],"names":[],"mappings":"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","file":"32.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { CreateVaultGeneralInfoView } from 'merit/vaults/create-vault/general-info/general-info';\n\nimport { MnemonicService } from \"merit/utilities/mnemonic/mnemonic.service\";\n\n@NgModule({\n  declarations: [\n    CreateVaultGeneralInfoView,\n  ],\n  providers: [\n    MnemonicService,\n  ],\n  imports: [\n    IonicPageModule.forChild(CreateVaultGeneralInfoView),\n  ],\n})\nexport class CreateVaultGeneralInfoComponentModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/vaults/create-vault/general-info/general-info.module.ts","import * as Promise from 'bluebird';\nimport * as _ from \"lodash\";\n\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { CreateVaultService } from \"merit/vaults/create-vault/create-vault.service\";\nimport { WalletService } from \"merit/wallets/wallet.service\";\nimport { ProfileService } from \"merit/core/profile.service\";\nimport { VaultsService } from 'merit/vaults/vaults.service';\nimport { BwcService } from 'merit/core/bwc.service';\nimport { Logger } from 'merit/core/logger';\nimport { ToastConfig } from \"merit/core/toast.config\";\nimport { MeritToastController } from \"merit/core/toast.controller\";\n\n@IonicPage({\n  defaultHistory: ['WalletsView']\n})\n@Component({\n  selector: 'view-create-vault-general',\n  templateUrl: 'general-info.html',\n})\nexport class CreateVaultGeneralInfoView {\n\n  public formData = { vaultName: '', whitelist: [] };\n  public isNextAvailable = false;\n  public whitelistCandidates = [];\n  public bitcore = null;\n\n  constructor(\n    private navCtrl:NavController,\n    private createVaultService: CreateVaultService, \n    private profileService: ProfileService,\n    private walletService: WalletService,\n    private vaultsService: VaultsService,\n    private bwc: BwcService,\n    private logger: Logger,\n    private toastCtrl:MeritToastController,\n    public navParams: NavParams,\n  ){\n    this.bitcore = this.bwc.getBitcore();\n    this.logger.info('bitcore', this.bitcore);\n  }\n\n  checkNextAvailable() {\n    this.isNextAvailable = this.formData.vaultName.length > 0 && this.formData.whitelist.length > 0; \n  }\n\n  ionViewDidLoad() {\n    let data = this.createVaultService.getData();\n    this.formData.vaultName = data.vaultName;\n    this.formData.whitelist = data.whitelist;\n\n    // fetch users wallets\n    this.getAllWallets().then((wallets) => {\n      const walletDTOs = _.map(wallets, (w: any) => {\n        const name = w.name || w._id;\n        return { id: w.id, name: name, address: w.credentials.xPubKey, type: 'wallet', walletClientId: w.id };\n      });\n      this.logger.info('walletDTOs', walletDTOs);\n      this.whitelistCandidates = this.whitelistCandidates.concat(walletDTOs);\n    }).catch((err) => {\n      this.toastCtrl.create({\n        message: 'Failed to update wallets info',\n        cssClass: ToastConfig.CLASS_ERROR\n      }).present();\n    });\n\n    // fetch users vaults\n    // ToDo: uncomment when vaults support vault addresses in whitelists\n    // this.getAllVaults().then((vaults) => {\n    //   const vaultDTOs = _.map(vaults, (v: any) => {\n    //     const name = v.name || v._id;\n    //     const key = new this.bitcore.Address(v.address).toString();\n    //     this.logger.info(key);\n    //     return { id: v._id, name: name, address: key, type: 'vault' };\n    //   });\n    //   this.logger.info('walletDTOs', vaultDTOs);\n    //   this.whitelistCandidates = this.whitelistCandidates.concat(vaultDTOs);\n    // }).catch((err) => {\n    //   this.toastCtrl.create({\n    //     message: 'Failed to update vaults info',\n    //     cssClass: ToastConfig.CLASS_ERROR\n    //   }).present();\n    // });\n\n    this.checkNextAvailable();\n  }\n\n  toDeposit() {\n    this.createVaultService.updateData(this.formData);\n    this.navCtrl.push('CreateVaultDepositView', { refreshVaultList: this.navParams.get('refreshVaultList') });\n  }\n\n  private getAllWallets(): Promise<Array<any>> {\n    return this.profileService.getWallets().map((wallet: any) => {\n      return this.walletService.getStatus(wallet).then((status) => {\n        wallet.status = status;\n        return wallet;\n      });\n    });\n\n  }\n\n  private getAllVaults(): Promise<Array<any>> {\n    return this.profileService.getHeadWalletClient().then((walletClient) => {\n      if(!walletClient) {\n        return null;\n      }\n      return this.vaultsService.getVaults(walletClient);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/vaults/create-vault/general-info/general-info.ts"],"sourceRoot":""}